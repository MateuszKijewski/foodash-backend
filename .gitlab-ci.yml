image: docker:19.03.12

stages:
  - test
  - build
  - deploy

services:
  - docker:19.03.13-dind

variables:
  DOCKER_HOST: tcp://docker:2376
  APP_NAME: dev-backend
  CI_REGISTRY_IMAGE: $APP_NAME
  CD_CHART_REPO: infrastructure
  CD_GIT_REPOSITORY: git@gitlab.foodash.xyz:foodash/$CD_CHART_REPO.git
  CD_MANIFEST_FILE: Chart.yaml
  TAG: $CI_COMMIT_SHORT_SHA
  BRANCH: develop

before_script:
  - docker info
  - echo $CI_REGISTRY_IMAGE:$TAG $PWD
  # login
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL

# after_script:
#   - docker image prune -af

Test:
  only:
    - develop
  stage: test
  script:
    - 'docker run --rm -v ${PWD}:/workdir -w /workdir mcr.microsoft.com/dotnet/sdk:6.0 dotnet test /workdir/FooDash/FooDash.sln --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"'
  artifacts:
    when: always
    paths:
      - ./**/*test-result.xml
    reports:
      junit:
        - ./**/*test-result.xml

build_image:
  only:
    - develop
  stage: build
  script:
    # Docker Build && Push image
    - cd FooDash
    - cat Dockerfile
    - >
      docker build
      --tag $CI_REGISTRY_IMAGE:$TAG
      . 
    - docker tag $CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_URL/foodash/backend/$CI_REGISTRY_IMAGE:$TAG
    - docker push $CI_REGISTRY_URL/foodash/backend/$CI_REGISTRY_IMAGE:$TAG

tag_latest_image:
  only:
    - develop
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY_URL/foodash/backend/$CI_REGISTRY_IMAGE:$TAG
    - docker tag $CI_REGISTRY_URL/foodash/backend/$CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_URL/foodash/backend/$CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_URL/foodash/backend/$CI_REGISTRY_IMAGE:latest

update_manifest:
  only: 
   - develop
  stage: deploy
  variables:
    GIT_STRATEGY: none
  environment: Develop
  retry: 2
  script:
    # Add SSH key to root
    - mkdir -p /root/.ssh
    - cp $SSH_CONFIG /root/.ssh/config 
    - echo "$SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
    # Git
    - apk add --no-cache git
    - git config --global user.name $APP_NAME
    - git config --global user.email $APP_NAME"@gitlab.foodash.xyz"
    - git clone --single-branch --branch $BRANCH $CD_GIT_REPOSITORY
    - cd $CD_CHART_REPO/Helms/backend
    # Helm
    - >
      docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write 
      --inplace --verbose $CD_MANIFEST_FILE appVersion $TAG
    - cat $CD_MANIFEST_FILE
    - git commit -am "update image tag" && git push origin $BRANCH
